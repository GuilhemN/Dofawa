<?php

// This code is automatically generated by a tool

// You can regenerate it using the command :
// php app/console generate:dof:characteristic

// The template is at :
// src/Dof/GeneratorBundle/Resources/views/ItemBundle/CharacteristicsTrait.php.twig


namespace Dof\Bundle\ItemBundle;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Serializer\Annotation\Groups;

trait CharacteristicsTrait
{
    /**
     * @var int
     *
     * @ORM\Column(name="vitality", type="integer")
     */
    protected $vitality;

    /**
     * @var int
     *
     * @ORM\Column(name="strength", type="integer")
     */
    protected $strength;

    /**
     * @var int
     *
     * @ORM\Column(name="intelligence", type="integer")
     */
    protected $intelligence;

    /**
     * @var int
     *
     * @ORM\Column(name="chance", type="integer")
     */
    protected $chance;

    /**
     * @var int
     *
     * @ORM\Column(name="agility", type="integer")
     */
    protected $agility;

    /**
     * @var int
     *
     * @ORM\Column(name="wisdom", type="integer")
     */
    protected $wisdom;

    /**
     * @var int
     *
     * @ORM\Column(name="power", type="integer")
     */
    protected $power;

    /**
     * @var int
     *
     * @ORM\Column(name="ap", type="integer")
     */
    protected $ap;

    /**
     * @var int
     *
     * @ORM\Column(name="mp", type="integer")
     */
    protected $mp;

    /**
     * @var int
     *
     * @ORM\Column(name="range_", type="integer")
     */
    protected $range;

    /**
     * @var int
     *
     * @ORM\Column(name="summons", type="integer")
     */
    protected $summons;

    /**
     * @var int
     *
     * @ORM\Column(name="damage", type="integer")
     */
    protected $damage;

    /**
     * @var int
     *
     * @ORM\Column(name="neutral_damage", type="integer")
     */
    protected $neutralDamage;

    /**
     * @var int
     *
     * @ORM\Column(name="earth_damage", type="integer")
     */
    protected $earthDamage;

    /**
     * @var int
     *
     * @ORM\Column(name="fire_damage", type="integer")
     */
    protected $fireDamage;

    /**
     * @var int
     *
     * @ORM\Column(name="water_damage", type="integer")
     */
    protected $waterDamage;

    /**
     * @var int
     *
     * @ORM\Column(name="air_damage", type="integer")
     */
    protected $airDamage;

    /**
     * @var int
     *
     * @ORM\Column(name="heals", type="integer")
     */
    protected $heals;

    /**
     * @var int
     *
     * @ORM\Column(name="prospecting", type="integer")
     */
    protected $prospecting;

    /**
     * @var int
     *
     * @ORM\Column(name="initiative", type="integer")
     */
    protected $initiative;

    /**
     * @var int
     *
     * @ORM\Column(name="reflected_damage", type="integer")
     */
    protected $reflectedDamage;

    /**
     * @var int
     *
     * @ORM\Column(name="percent_neutral_resistance", type="integer")
     */
    protected $percentNeutralResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="percent_water_resistance", type="integer")
     */
    protected $percentWaterResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="neutral_resistance", type="integer")
     */
    protected $neutralResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="earth_resistance", type="integer")
     */
    protected $earthResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="fire_resistance", type="integer")
     */
    protected $fireResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="water_resistance", type="integer")
     */
    protected $waterResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="air_resistance", type="integer")
     */
    protected $airResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="neutral_resistance_in_pvp", type="integer")
     */
    protected $neutralResistanceInPvp;

    /**
     * @var int
     *
     * @ORM\Column(name="earth_resistance_in_pvp", type="integer")
     */
    protected $earthResistanceInPvp;

    /**
     * @var int
     *
     * @ORM\Column(name="fire_resistance_in_pvp", type="integer")
     */
    protected $fireResistanceInPvp;

    /**
     * @var int
     *
     * @ORM\Column(name="water_resistance_in_pvp", type="integer")
     */
    protected $waterResistanceInPvp;

    /**
     * @var int
     *
     * @ORM\Column(name="air_resistance_in_pvp", type="integer")
     */
    protected $airResistanceInPvp;

    /**
     * @var int
     *
     * @ORM\Column(name="lock_", type="integer")
     */
    protected $lock;

    /**
     * @var int
     *
     * @ORM\Column(name="dodge", type="integer")
     */
    protected $dodge;

    /**
     * @var int
     *
     * @ORM\Column(name="ap_reduction", type="integer")
     */
    protected $apReduction;

    /**
     * @var int
     *
     * @ORM\Column(name="mp_reduction", type="integer")
     */
    protected $mpReduction;

    /**
     * @var int
     *
     * @ORM\Column(name="ap_loss_resistance", type="integer")
     */
    protected $apLossResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="mp_loss_resistance", type="integer")
     */
    protected $mpLossResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="critical_damage", type="integer")
     */
    protected $criticalDamage;

    /**
     * @var int
     *
     * @ORM\Column(name="critical_resistance", type="integer")
     */
    protected $criticalResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="pushback_damage", type="integer")
     */
    protected $pushbackDamage;

    /**
     * @var int
     *
     * @ORM\Column(name="pushback_resistance", type="integer")
     */
    protected $pushbackResistance;

    /**
     * @var int
     *
     * @ORM\Column(name="trap_power", type="integer")
     */
    protected $trapPower;

    /**
     * @var int
     *
     * @ORM\Column(name="trap_damage", type="integer")
     */
    protected $trapDamage;

    /**
     * Set vitality.
     *
     * @param int $vitality
     *
     * @return object
     */
    public function setVitality($vitality)
    {
        $this->vitality = $vitality;

        return $this;
    }

    /**
     * Get vitality.
     *
     * @return int
     */
    public function getVitality()
    {
        return $this->vitality;
    }

    /**
     * Set strength.
     *
     * @param int $strength
     *
     * @return object
     */
    public function setStrength($strength)
    {
        $this->strength = $strength;

        return $this;
    }

    /**
     * Get strength.
     *
     * @return int
     */
    public function getStrength()
    {
        return $this->strength;
    }

    /**
     * Set intelligence.
     *
     * @param int $intelligence
     *
     * @return object
     */
    public function setIntelligence($intelligence)
    {
        $this->intelligence = $intelligence;

        return $this;
    }

    /**
     * Get intelligence.
     *
     * @return int
     */
    public function getIntelligence()
    {
        return $this->intelligence;
    }

    /**
     * Set chance.
     *
     * @param int $chance
     *
     * @return object
     */
    public function setChance($chance)
    {
        $this->chance = $chance;

        return $this;
    }

    /**
     * Get chance.
     *
     * @return int
     */
    public function getChance()
    {
        return $this->chance;
    }

    /**
     * Set agility.
     *
     * @param int $agility
     *
     * @return object
     */
    public function setAgility($agility)
    {
        $this->agility = $agility;

        return $this;
    }

    /**
     * Get agility.
     *
     * @return int
     */
    public function getAgility()
    {
        return $this->agility;
    }

    /**
     * Set wisdom.
     *
     * @param int $wisdom
     *
     * @return object
     */
    public function setWisdom($wisdom)
    {
        $this->wisdom = $wisdom;

        return $this;
    }

    /**
     * Get wisdom.
     *
     * @return int
     */
    public function getWisdom()
    {
        return $this->wisdom;
    }

    /**
     * Set power.
     *
     * @param int $power
     *
     * @return object
     */
    public function setPower($power)
    {
        $this->power = $power;

        return $this;
    }

    /**
     * Get power.
     *
     * @return int
     */
    public function getPower()
    {
        return $this->power;
    }

    /**
     * Set ap.
     *
     * @param int $ap
     *
     * @return object
     */
    public function setAp($ap)
    {
        $this->ap = $ap;

        return $this;
    }

    /**
     * Get ap.
     *
     * @return int
     */
    public function getAp()
    {
        return $this->ap;
    }

    /**
     * Set mp.
     *
     * @param int $mp
     *
     * @return object
     */
    public function setMp($mp)
    {
        $this->mp = $mp;

        return $this;
    }

    /**
     * Get mp.
     *
     * @return int
     */
    public function getMp()
    {
        return $this->mp;
    }

    /**
     * Set range.
     *
     * @param int $range
     *
     * @return object
     */
    public function setRange($range)
    {
        $this->range = $range;

        return $this;
    }

    /**
     * Get range.
     *
     * @return int
     */
    public function getRange()
    {
        return $this->range;
    }

    /**
     * Set summons.
     *
     * @param int $summons
     *
     * @return object
     */
    public function setSummons($summons)
    {
        $this->summons = $summons;

        return $this;
    }

    /**
     * Get summons.
     *
     * @return int
     */
    public function getSummons()
    {
        return $this->summons;
    }

    /**
     * Set damage.
     *
     * @param int $damage
     *
     * @return object
     */
    public function setDamage($damage)
    {
        $this->damage = $damage;

        return $this;
    }

    /**
     * Get damage.
     *
     * @return int
     */
    public function getDamage()
    {
        return $this->damage;
    }

    /**
     * Set neutralDamage.
     *
     * @param int $neutralDamage
     *
     * @return object
     */
    public function setNeutralDamage($neutralDamage)
    {
        $this->neutralDamage = $neutralDamage;

        return $this;
    }

    /**
     * Get neutralDamage.
     *
     * @return int
     */
    public function getNeutralDamage()
    {
        return $this->neutralDamage;
    }

    /**
     * Set earthDamage.
     *
     * @param int $earthDamage
     *
     * @return object
     */
    public function setEarthDamage($earthDamage)
    {
        $this->earthDamage = $earthDamage;

        return $this;
    }

    /**
     * Get earthDamage.
     *
     * @return int
     */
    public function getEarthDamage()
    {
        return $this->earthDamage;
    }

    /**
     * Set fireDamage.
     *
     * @param int $fireDamage
     *
     * @return object
     */
    public function setFireDamage($fireDamage)
    {
        $this->fireDamage = $fireDamage;

        return $this;
    }

    /**
     * Get fireDamage.
     *
     * @return int
     */
    public function getFireDamage()
    {
        return $this->fireDamage;
    }

    /**
     * Set waterDamage.
     *
     * @param int $waterDamage
     *
     * @return object
     */
    public function setWaterDamage($waterDamage)
    {
        $this->waterDamage = $waterDamage;

        return $this;
    }

    /**
     * Get waterDamage.
     *
     * @return int
     */
    public function getWaterDamage()
    {
        return $this->waterDamage;
    }

    /**
     * Set airDamage.
     *
     * @param int $airDamage
     *
     * @return object
     */
    public function setAirDamage($airDamage)
    {
        $this->airDamage = $airDamage;

        return $this;
    }

    /**
     * Get airDamage.
     *
     * @return int
     */
    public function getAirDamage()
    {
        return $this->airDamage;
    }

    /**
     * Set heals.
     *
     * @param int $heals
     *
     * @return object
     */
    public function setHeals($heals)
    {
        $this->heals = $heals;

        return $this;
    }

    /**
     * Get heals.
     *
     * @return int
     */
    public function getHeals()
    {
        return $this->heals;
    }

    /**
     * Set prospecting.
     *
     * @param int $prospecting
     *
     * @return object
     */
    public function setProspecting($prospecting)
    {
        $this->prospecting = $prospecting;

        return $this;
    }

    /**
     * Get prospecting.
     *
     * @return int
     */
    public function getProspecting()
    {
        return $this->prospecting;
    }

    /**
     * Set initiative.
     *
     * @param int $initiative
     *
     * @return object
     */
    public function setInitiative($initiative)
    {
        $this->initiative = $initiative;

        return $this;
    }

    /**
     * Get initiative.
     *
     * @return int
     */
    public function getInitiative()
    {
        return $this->initiative;
    }

    /**
     * Set reflectedDamage.
     *
     * @param int $reflectedDamage
     *
     * @return object
     */
    public function setReflectedDamage($reflectedDamage)
    {
        $this->reflectedDamage = $reflectedDamage;

        return $this;
    }

    /**
     * Get reflectedDamage.
     *
     * @return int
     */
    public function getReflectedDamage()
    {
        return $this->reflectedDamage;
    }

    /**
     * Set percentNeutralResistance.
     *
     * @param int $percentNeutralResistance
     *
     * @return object
     */
    public function setPercentNeutralResistance($percentNeutralResistance)
    {
        $this->percentNeutralResistance = $percentNeutralResistance;

        return $this;
    }

    /**
     * Get percentNeutralResistance.
     *
     * @return int
     */
    public function getPercentNeutralResistance()
    {
        return $this->percentNeutralResistance;
    }

    /**
     * Set percentWaterResistance.
     *
     * @param int $percentWaterResistance
     *
     * @return object
     */
    public function setPercentWaterResistance($percentWaterResistance)
    {
        $this->percentWaterResistance = $percentWaterResistance;

        return $this;
    }

    /**
     * Get percentWaterResistance.
     *
     * @return int
     */
    public function getPercentWaterResistance()
    {
        return $this->percentWaterResistance;
    }

    /**
     * Set neutralResistance.
     *
     * @param int $neutralResistance
     *
     * @return object
     */
    public function setNeutralResistance($neutralResistance)
    {
        $this->neutralResistance = $neutralResistance;

        return $this;
    }

    /**
     * Get neutralResistance.
     *
     * @return int
     */
    public function getNeutralResistance()
    {
        return $this->neutralResistance;
    }

    /**
     * Set earthResistance.
     *
     * @param int $earthResistance
     *
     * @return object
     */
    public function setEarthResistance($earthResistance)
    {
        $this->earthResistance = $earthResistance;

        return $this;
    }

    /**
     * Get earthResistance.
     *
     * @return int
     */
    public function getEarthResistance()
    {
        return $this->earthResistance;
    }

    /**
     * Set fireResistance.
     *
     * @param int $fireResistance
     *
     * @return object
     */
    public function setFireResistance($fireResistance)
    {
        $this->fireResistance = $fireResistance;

        return $this;
    }

    /**
     * Get fireResistance.
     *
     * @return int
     */
    public function getFireResistance()
    {
        return $this->fireResistance;
    }

    /**
     * Set waterResistance.
     *
     * @param int $waterResistance
     *
     * @return object
     */
    public function setWaterResistance($waterResistance)
    {
        $this->waterResistance = $waterResistance;

        return $this;
    }

    /**
     * Get waterResistance.
     *
     * @return int
     */
    public function getWaterResistance()
    {
        return $this->waterResistance;
    }

    /**
     * Set airResistance.
     *
     * @param int $airResistance
     *
     * @return object
     */
    public function setAirResistance($airResistance)
    {
        $this->airResistance = $airResistance;

        return $this;
    }

    /**
     * Get airResistance.
     *
     * @return int
     */
    public function getAirResistance()
    {
        return $this->airResistance;
    }

    /**
     * Set neutralResistanceInPvp.
     *
     * @param int $neutralResistanceInPvp
     *
     * @return object
     */
    public function setNeutralResistanceInPvp($neutralResistanceInPvp)
    {
        $this->neutralResistanceInPvp = $neutralResistanceInPvp;

        return $this;
    }

    /**
     * Get neutralResistanceInPvp.
     *
     * @return int
     */
    public function getNeutralResistanceInPvp()
    {
        return $this->neutralResistanceInPvp;
    }

    /**
     * Set earthResistanceInPvp.
     *
     * @param int $earthResistanceInPvp
     *
     * @return object
     */
    public function setEarthResistanceInPvp($earthResistanceInPvp)
    {
        $this->earthResistanceInPvp = $earthResistanceInPvp;

        return $this;
    }

    /**
     * Get earthResistanceInPvp.
     *
     * @return int
     */
    public function getEarthResistanceInPvp()
    {
        return $this->earthResistanceInPvp;
    }

    /**
     * Set fireResistanceInPvp.
     *
     * @param int $fireResistanceInPvp
     *
     * @return object
     */
    public function setFireResistanceInPvp($fireResistanceInPvp)
    {
        $this->fireResistanceInPvp = $fireResistanceInPvp;

        return $this;
    }

    /**
     * Get fireResistanceInPvp.
     *
     * @return int
     */
    public function getFireResistanceInPvp()
    {
        return $this->fireResistanceInPvp;
    }

    /**
     * Set waterResistanceInPvp.
     *
     * @param int $waterResistanceInPvp
     *
     * @return object
     */
    public function setWaterResistanceInPvp($waterResistanceInPvp)
    {
        $this->waterResistanceInPvp = $waterResistanceInPvp;

        return $this;
    }

    /**
     * Get waterResistanceInPvp.
     *
     * @return int
     */
    public function getWaterResistanceInPvp()
    {
        return $this->waterResistanceInPvp;
    }

    /**
     * Set airResistanceInPvp.
     *
     * @param int $airResistanceInPvp
     *
     * @return object
     */
    public function setAirResistanceInPvp($airResistanceInPvp)
    {
        $this->airResistanceInPvp = $airResistanceInPvp;

        return $this;
    }

    /**
     * Get airResistanceInPvp.
     *
     * @return int
     */
    public function getAirResistanceInPvp()
    {
        return $this->airResistanceInPvp;
    }

    /**
     * Set lock.
     *
     * @param int $lock
     *
     * @return object
     */
    public function setLock($lock)
    {
        $this->lock = $lock;

        return $this;
    }

    /**
     * Get lock.
     *
     * @return int
     */
    public function getLock()
    {
        return $this->lock;
    }

    /**
     * Set dodge.
     *
     * @param int $dodge
     *
     * @return object
     */
    public function setDodge($dodge)
    {
        $this->dodge = $dodge;

        return $this;
    }

    /**
     * Get dodge.
     *
     * @return int
     */
    public function getDodge()
    {
        return $this->dodge;
    }

    /**
     * Set apReduction.
     *
     * @param int $apReduction
     *
     * @return object
     */
    public function setApReduction($apReduction)
    {
        $this->apReduction = $apReduction;

        return $this;
    }

    /**
     * Get apReduction.
     *
     * @return int
     */
    public function getApReduction()
    {
        return $this->apReduction;
    }

    /**
     * Set mpReduction.
     *
     * @param int $mpReduction
     *
     * @return object
     */
    public function setMpReduction($mpReduction)
    {
        $this->mpReduction = $mpReduction;

        return $this;
    }

    /**
     * Get mpReduction.
     *
     * @return int
     */
    public function getMpReduction()
    {
        return $this->mpReduction;
    }

    /**
     * Set apLossResistance.
     *
     * @param int $apLossResistance
     *
     * @return object
     */
    public function setApLossResistance($apLossResistance)
    {
        $this->apLossResistance = $apLossResistance;

        return $this;
    }

    /**
     * Get apLossResistance.
     *
     * @return int
     */
    public function getApLossResistance()
    {
        return $this->apLossResistance;
    }

    /**
     * Set mpLossResistance.
     *
     * @param int $mpLossResistance
     *
     * @return object
     */
    public function setMpLossResistance($mpLossResistance)
    {
        $this->mpLossResistance = $mpLossResistance;

        return $this;
    }

    /**
     * Get mpLossResistance.
     *
     * @return int
     */
    public function getMpLossResistance()
    {
        return $this->mpLossResistance;
    }

    /**
     * Set criticalDamage.
     *
     * @param int $criticalDamage
     *
     * @return object
     */
    public function setCriticalDamage($criticalDamage)
    {
        $this->criticalDamage = $criticalDamage;

        return $this;
    }

    /**
     * Get criticalDamage.
     *
     * @return int
     */
    public function getCriticalDamage()
    {
        return $this->criticalDamage;
    }

    /**
     * Set criticalResistance.
     *
     * @param int $criticalResistance
     *
     * @return object
     */
    public function setCriticalResistance($criticalResistance)
    {
        $this->criticalResistance = $criticalResistance;

        return $this;
    }

    /**
     * Get criticalResistance.
     *
     * @return int
     */
    public function getCriticalResistance()
    {
        return $this->criticalResistance;
    }

    /**
     * Set pushbackDamage.
     *
     * @param int $pushbackDamage
     *
     * @return object
     */
    public function setPushbackDamage($pushbackDamage)
    {
        $this->pushbackDamage = $pushbackDamage;

        return $this;
    }

    /**
     * Get pushbackDamage.
     *
     * @return int
     */
    public function getPushbackDamage()
    {
        return $this->pushbackDamage;
    }

    /**
     * Set pushbackResistance.
     *
     * @param int $pushbackResistance
     *
     * @return object
     */
    public function setPushbackResistance($pushbackResistance)
    {
        $this->pushbackResistance = $pushbackResistance;

        return $this;
    }

    /**
     * Get pushbackResistance.
     *
     * @return int
     */
    public function getPushbackResistance()
    {
        return $this->pushbackResistance;
    }

    /**
     * Set trapPower.
     *
     * @param int $trapPower
     *
     * @return object
     */
    public function setTrapPower($trapPower)
    {
        $this->trapPower = $trapPower;

        return $this;
    }

    /**
     * Get trapPower.
     *
     * @return int
     */
    public function getTrapPower()
    {
        return $this->trapPower;
    }

    /**
     * Set trapDamage.
     *
     * @param int $trapDamage
     *
     * @return object
     */
    public function setTrapDamage($trapDamage)
    {
        $this->trapDamage = $trapDamage;

        return $this;
    }

    /**
     * Get trapDamage.
     *
     * @return int
     */
    public function getTrapDamage()
    {
        return $this->trapDamage;
    }

    /**
     * Set all characteristics.
     *
     * @param array $characteristics
     * @param bool  $zeroMissing
     *
     * @return object
     */
    public function setCharacteristics(array $characteristics, $zeroMissing = false)
    {
        if (isset($characteristics['vitality'])) {
            $this->vitality = $characteristics['vitality'];
        } elseif ($zeroMissing) {
            $this->vitality = 0;
        }
        if (isset($characteristics['strength'])) {
            $this->strength = $characteristics['strength'];
        } elseif ($zeroMissing) {
            $this->strength = 0;
        }
        if (isset($characteristics['intelligence'])) {
            $this->intelligence = $characteristics['intelligence'];
        } elseif ($zeroMissing) {
            $this->intelligence = 0;
        }
        if (isset($characteristics['chance'])) {
            $this->chance = $characteristics['chance'];
        } elseif ($zeroMissing) {
            $this->chance = 0;
        }
        if (isset($characteristics['agility'])) {
            $this->agility = $characteristics['agility'];
        } elseif ($zeroMissing) {
            $this->agility = 0;
        }
        if (isset($characteristics['wisdom'])) {
            $this->wisdom = $characteristics['wisdom'];
        } elseif ($zeroMissing) {
            $this->wisdom = 0;
        }
        if (isset($characteristics['power'])) {
            $this->power = $characteristics['power'];
        } elseif ($zeroMissing) {
            $this->power = 0;
        }
        if (isset($characteristics['ap'])) {
            $this->ap = $characteristics['ap'];
        } elseif ($zeroMissing) {
            $this->ap = 0;
        }
        if (isset($characteristics['mp'])) {
            $this->mp = $characteristics['mp'];
        } elseif ($zeroMissing) {
            $this->mp = 0;
        }
        if (isset($characteristics['range'])) {
            $this->range = $characteristics['range'];
        } elseif ($zeroMissing) {
            $this->range = 0;
        }
        if (isset($characteristics['summons'])) {
            $this->summons = $characteristics['summons'];
        } elseif ($zeroMissing) {
            $this->summons = 0;
        }
        if (isset($characteristics['damage'])) {
            $this->damage = $characteristics['damage'];
        } elseif ($zeroMissing) {
            $this->damage = 0;
        }
        if (isset($characteristics['neutralDamage'])) {
            $this->neutralDamage = $characteristics['neutralDamage'];
        } elseif ($zeroMissing) {
            $this->neutralDamage = 0;
        }
        if (isset($characteristics['earthDamage'])) {
            $this->earthDamage = $characteristics['earthDamage'];
        } elseif ($zeroMissing) {
            $this->earthDamage = 0;
        }
        if (isset($characteristics['fireDamage'])) {
            $this->fireDamage = $characteristics['fireDamage'];
        } elseif ($zeroMissing) {
            $this->fireDamage = 0;
        }
        if (isset($characteristics['waterDamage'])) {
            $this->waterDamage = $characteristics['waterDamage'];
        } elseif ($zeroMissing) {
            $this->waterDamage = 0;
        }
        if (isset($characteristics['airDamage'])) {
            $this->airDamage = $characteristics['airDamage'];
        } elseif ($zeroMissing) {
            $this->airDamage = 0;
        }
        if (isset($characteristics['heals'])) {
            $this->heals = $characteristics['heals'];
        } elseif ($zeroMissing) {
            $this->heals = 0;
        }
        if (isset($characteristics['prospecting'])) {
            $this->prospecting = $characteristics['prospecting'];
        } elseif ($zeroMissing) {
            $this->prospecting = 0;
        }
        if (isset($characteristics['initiative'])) {
            $this->initiative = $characteristics['initiative'];
        } elseif ($zeroMissing) {
            $this->initiative = 0;
        }
        if (isset($characteristics['reflectedDamage'])) {
            $this->reflectedDamage = $characteristics['reflectedDamage'];
        } elseif ($zeroMissing) {
            $this->reflectedDamage = 0;
        }
        if (isset($characteristics['percentNeutralResistance'])) {
            $this->percentNeutralResistance = $characteristics['percentNeutralResistance'];
        } elseif ($zeroMissing) {
            $this->percentNeutralResistance = 0;
        }
        if (isset($characteristics['percentWaterResistance'])) {
            $this->percentWaterResistance = $characteristics['percentWaterResistance'];
        } elseif ($zeroMissing) {
            $this->percentWaterResistance = 0;
        }
        if (isset($characteristics['neutralResistance'])) {
            $this->neutralResistance = $characteristics['neutralResistance'];
        } elseif ($zeroMissing) {
            $this->neutralResistance = 0;
        }
        if (isset($characteristics['earthResistance'])) {
            $this->earthResistance = $characteristics['earthResistance'];
        } elseif ($zeroMissing) {
            $this->earthResistance = 0;
        }
        if (isset($characteristics['fireResistance'])) {
            $this->fireResistance = $characteristics['fireResistance'];
        } elseif ($zeroMissing) {
            $this->fireResistance = 0;
        }
        if (isset($characteristics['waterResistance'])) {
            $this->waterResistance = $characteristics['waterResistance'];
        } elseif ($zeroMissing) {
            $this->waterResistance = 0;
        }
        if (isset($characteristics['airResistance'])) {
            $this->airResistance = $characteristics['airResistance'];
        } elseif ($zeroMissing) {
            $this->airResistance = 0;
        }
        if (isset($characteristics['neutralResistanceInPvp'])) {
            $this->neutralResistanceInPvp = $characteristics['neutralResistanceInPvp'];
        } elseif ($zeroMissing) {
            $this->neutralResistanceInPvp = 0;
        }
        if (isset($characteristics['earthResistanceInPvp'])) {
            $this->earthResistanceInPvp = $characteristics['earthResistanceInPvp'];
        } elseif ($zeroMissing) {
            $this->earthResistanceInPvp = 0;
        }
        if (isset($characteristics['fireResistanceInPvp'])) {
            $this->fireResistanceInPvp = $characteristics['fireResistanceInPvp'];
        } elseif ($zeroMissing) {
            $this->fireResistanceInPvp = 0;
        }
        if (isset($characteristics['waterResistanceInPvp'])) {
            $this->waterResistanceInPvp = $characteristics['waterResistanceInPvp'];
        } elseif ($zeroMissing) {
            $this->waterResistanceInPvp = 0;
        }
        if (isset($characteristics['airResistanceInPvp'])) {
            $this->airResistanceInPvp = $characteristics['airResistanceInPvp'];
        } elseif ($zeroMissing) {
            $this->airResistanceInPvp = 0;
        }
        if (isset($characteristics['lock'])) {
            $this->lock = $characteristics['lock'];
        } elseif ($zeroMissing) {
            $this->lock = 0;
        }
        if (isset($characteristics['dodge'])) {
            $this->dodge = $characteristics['dodge'];
        } elseif ($zeroMissing) {
            $this->dodge = 0;
        }
        if (isset($characteristics['apReduction'])) {
            $this->apReduction = $characteristics['apReduction'];
        } elseif ($zeroMissing) {
            $this->apReduction = 0;
        }
        if (isset($characteristics['mpReduction'])) {
            $this->mpReduction = $characteristics['mpReduction'];
        } elseif ($zeroMissing) {
            $this->mpReduction = 0;
        }
        if (isset($characteristics['apLossResistance'])) {
            $this->apLossResistance = $characteristics['apLossResistance'];
        } elseif ($zeroMissing) {
            $this->apLossResistance = 0;
        }
        if (isset($characteristics['mpLossResistance'])) {
            $this->mpLossResistance = $characteristics['mpLossResistance'];
        } elseif ($zeroMissing) {
            $this->mpLossResistance = 0;
        }
        if (isset($characteristics['criticalDamage'])) {
            $this->criticalDamage = $characteristics['criticalDamage'];
        } elseif ($zeroMissing) {
            $this->criticalDamage = 0;
        }
        if (isset($characteristics['criticalResistance'])) {
            $this->criticalResistance = $characteristics['criticalResistance'];
        } elseif ($zeroMissing) {
            $this->criticalResistance = 0;
        }
        if (isset($characteristics['pushbackDamage'])) {
            $this->pushbackDamage = $characteristics['pushbackDamage'];
        } elseif ($zeroMissing) {
            $this->pushbackDamage = 0;
        }
        if (isset($characteristics['pushbackResistance'])) {
            $this->pushbackResistance = $characteristics['pushbackResistance'];
        } elseif ($zeroMissing) {
            $this->pushbackResistance = 0;
        }
        if (isset($characteristics['trapPower'])) {
            $this->trapPower = $characteristics['trapPower'];
        } elseif ($zeroMissing) {
            $this->trapPower = 0;
        }
        if (isset($characteristics['trapDamage'])) {
            $this->trapDamage = $characteristics['trapDamage'];
        } elseif ($zeroMissing) {
            $this->trapDamage = 0;
        }

        return $this;
    }

    /**
     * Get all characteristics.
     *
     * @Groups({"effects"})
     *
     * @return array
     */
    public function getCharacteristics()
    {
        $return = [];
        if (!empty($this->vitality)) {
            $return['vitality'] = ['min' => $this->vitality, 'max' => $this->vitality];
        }

        if (!empty($this->strength)) {
            $return['strength'] = ['min' => $this->strength, 'max' => $this->strength];
        }

        if (!empty($this->intelligence)) {
            $return['intelligence'] = ['min' => $this->intelligence, 'max' => $this->intelligence];
        }

        if (!empty($this->chance)) {
            $return['chance'] = ['min' => $this->chance, 'max' => $this->chance];
        }

        if (!empty($this->agility)) {
            $return['agility'] = ['min' => $this->agility, 'max' => $this->agility];
        }

        if (!empty($this->wisdom)) {
            $return['wisdom'] = ['min' => $this->wisdom, 'max' => $this->wisdom];
        }

        if (!empty($this->power)) {
            $return['power'] = ['min' => $this->power, 'max' => $this->power];
        }

        if (!empty($this->ap)) {
            $return['ap'] = ['min' => $this->ap, 'max' => $this->ap];
        }

        if (!empty($this->mp)) {
            $return['mp'] = ['min' => $this->mp, 'max' => $this->mp];
        }

        if (!empty($this->range)) {
            $return['range'] = ['min' => $this->range, 'max' => $this->range];
        }

        if (!empty($this->summons)) {
            $return['summons'] = ['min' => $this->summons, 'max' => $this->summons];
        }

        if (!empty($this->damage)) {
            $return['damage'] = ['min' => $this->damage, 'max' => $this->damage];
        }

        if (!empty($this->neutralDamage)) {
            $return['neutralDamage'] = ['min' => $this->neutralDamage, 'max' => $this->neutralDamage];
        }

        if (!empty($this->earthDamage)) {
            $return['earthDamage'] = ['min' => $this->earthDamage, 'max' => $this->earthDamage];
        }

        if (!empty($this->fireDamage)) {
            $return['fireDamage'] = ['min' => $this->fireDamage, 'max' => $this->fireDamage];
        }

        if (!empty($this->waterDamage)) {
            $return['waterDamage'] = ['min' => $this->waterDamage, 'max' => $this->waterDamage];
        }

        if (!empty($this->airDamage)) {
            $return['airDamage'] = ['min' => $this->airDamage, 'max' => $this->airDamage];
        }

        if (!empty($this->heals)) {
            $return['heals'] = ['min' => $this->heals, 'max' => $this->heals];
        }

        if (!empty($this->prospecting)) {
            $return['prospecting'] = ['min' => $this->prospecting, 'max' => $this->prospecting];
        }

        if (!empty($this->initiative)) {
            $return['initiative'] = ['min' => $this->initiative, 'max' => $this->initiative];
        }

        if (!empty($this->reflectedDamage)) {
            $return['reflectedDamage'] = ['min' => $this->reflectedDamage, 'max' => $this->reflectedDamage];
        }

        if (!empty($this->percentNeutralResistance)) {
            $return['percentNeutralResistance'] = ['min' => $this->percentNeutralResistance, 'max' => $this->percentNeutralResistance];
        }

        if (!empty($this->percentWaterResistance)) {
            $return['percentWaterResistance'] = ['min' => $this->percentWaterResistance, 'max' => $this->percentWaterResistance];
        }

        if (!empty($this->neutralResistance)) {
            $return['neutralResistance'] = ['min' => $this->neutralResistance, 'max' => $this->neutralResistance];
        }

        if (!empty($this->earthResistance)) {
            $return['earthResistance'] = ['min' => $this->earthResistance, 'max' => $this->earthResistance];
        }

        if (!empty($this->fireResistance)) {
            $return['fireResistance'] = ['min' => $this->fireResistance, 'max' => $this->fireResistance];
        }

        if (!empty($this->waterResistance)) {
            $return['waterResistance'] = ['min' => $this->waterResistance, 'max' => $this->waterResistance];
        }

        if (!empty($this->airResistance)) {
            $return['airResistance'] = ['min' => $this->airResistance, 'max' => $this->airResistance];
        }

        if (!empty($this->neutralResistanceInPvp)) {
            $return['neutralResistanceInPvp'] = ['min' => $this->neutralResistanceInPvp, 'max' => $this->neutralResistanceInPvp];
        }

        if (!empty($this->earthResistanceInPvp)) {
            $return['earthResistanceInPvp'] = ['min' => $this->earthResistanceInPvp, 'max' => $this->earthResistanceInPvp];
        }

        if (!empty($this->fireResistanceInPvp)) {
            $return['fireResistanceInPvp'] = ['min' => $this->fireResistanceInPvp, 'max' => $this->fireResistanceInPvp];
        }

        if (!empty($this->waterResistanceInPvp)) {
            $return['waterResistanceInPvp'] = ['min' => $this->waterResistanceInPvp, 'max' => $this->waterResistanceInPvp];
        }

        if (!empty($this->airResistanceInPvp)) {
            $return['airResistanceInPvp'] = ['min' => $this->airResistanceInPvp, 'max' => $this->airResistanceInPvp];
        }

        if (!empty($this->lock)) {
            $return['lock'] = ['min' => $this->lock, 'max' => $this->lock];
        }

        if (!empty($this->dodge)) {
            $return['dodge'] = ['min' => $this->dodge, 'max' => $this->dodge];
        }

        if (!empty($this->apReduction)) {
            $return['apReduction'] = ['min' => $this->apReduction, 'max' => $this->apReduction];
        }

        if (!empty($this->mpReduction)) {
            $return['mpReduction'] = ['min' => $this->mpReduction, 'max' => $this->mpReduction];
        }

        if (!empty($this->apLossResistance)) {
            $return['apLossResistance'] = ['min' => $this->apLossResistance, 'max' => $this->apLossResistance];
        }

        if (!empty($this->mpLossResistance)) {
            $return['mpLossResistance'] = ['min' => $this->mpLossResistance, 'max' => $this->mpLossResistance];
        }

        if (!empty($this->criticalDamage)) {
            $return['criticalDamage'] = ['min' => $this->criticalDamage, 'max' => $this->criticalDamage];
        }

        if (!empty($this->criticalResistance)) {
            $return['criticalResistance'] = ['min' => $this->criticalResistance, 'max' => $this->criticalResistance];
        }

        if (!empty($this->pushbackDamage)) {
            $return['pushbackDamage'] = ['min' => $this->pushbackDamage, 'max' => $this->pushbackDamage];
        }

        if (!empty($this->pushbackResistance)) {
            $return['pushbackResistance'] = ['min' => $this->pushbackResistance, 'max' => $this->pushbackResistance];
        }

        if (!empty($this->trapPower)) {
            $return['trapPower'] = ['min' => $this->trapPower, 'max' => $this->trapPower];
        }

        if (!empty($this->trapDamage)) {
            $return['trapDamage'] = ['min' => $this->trapDamage, 'max' => $this->trapDamage];
        }

        return $return;
    }
}
